{"version":3,"sources":["theme.js","calculator/InputHelpers.jsx","calculator/index.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["theme","createMuiTheme","palette","DollarInput","props","inputRef","onChange","other","getInputRef","onValueChange","values","target","name","value","thousandSeparator","isNumericString","allowNegative","prefix","PercentageInput","suffix","useStyles","makeStyles","container","display","flexDirection","alignItems","padding","spacing","button","marginTop","alignSelf","Calculator","classes","useState","withdrawalAmount","setWithdrawalAmount","age","setAge","retirementAge","setRetirementAge","salary","setSalary","superContribution","setSuperContribution","Paper","className","elevation","Grid","direction","justify","item","TextField","id","label","event","variant","InputProps","inputComponent","fullWidth","Typography","gutterBottom","Slider","getAriaValueText","aria-labelledby","step","min","max","valueLabelDisplay","Button","color","onClick","console","log","root","width","justifyContent","maxWidth","minHeight","App","ThemeProvider","appTheme","CssBaseline","Container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2OAOeA,EALDC,YAAe,CAC3BC,QAAS,K,2ECAEC,EAAc,SAACC,GAAW,IAC7BC,EAAiCD,EAAjCC,SAAUC,EAAuBF,EAAvBE,SAAaC,EADK,YACKH,EADL,yBAGpC,OACE,kBAAC,IAAD,iBACMG,EADN,CAEEC,YAAaH,EACbI,cAAe,SAACC,GACdJ,EAAS,CACPK,OAAQ,CACNC,KAAMR,EAAMQ,KACZC,MAAOH,EAAOG,UAIpBC,mBAAiB,EACjBC,iBAAe,EACfC,eAAe,EACfC,OAAO,QAKAC,EAAkB,SAACd,GAAW,IACjCC,EAAiCD,EAAjCC,SAAUC,EAAuBF,EAAvBE,SAAaC,EADS,YACCH,EADD,yBAGxC,OACE,kBAAC,IAAD,iBACMG,EADN,CAEEC,YAAaH,EACbI,cAAe,SAACC,GACdJ,EAAS,CACPK,OAAQ,CACNC,KAAMR,EAAMQ,KACZC,MAAOH,EAAOG,UAIpBC,mBAAiB,EACjBC,iBAAe,EACfC,eAAe,EACfG,OAAO,QClCPC,EAAYC,aAAW,SAACrB,GAAD,MAAY,CACvCsB,UAAW,CACTC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,QAAS1B,EAAM2B,QAAQ,IAEzBC,OAAQ,CACNC,UAAW7B,EAAM2B,QAAQ,GACzBG,UAAW,gBA0GAC,EAtGI,WACjB,IAAMC,EAAUZ,IADO,EAEyBa,mBAAS,SAFlC,mBAEhBC,EAFgB,KAEEC,EAFF,OAGDF,mBAAS,IAHR,mBAGhBG,EAHgB,KAGXC,EAHW,OAImBJ,mBAAS,IAJ5B,mBAIhBK,EAJgB,KAIDC,EAJC,OAKKN,mBAAS,SALd,mBAKhBO,EALgB,KAKRC,EALQ,OAM2BR,mBAAS,OANpC,mBAMhBS,EANgB,KAMGC,EANH,KAgBvB,OACE,kBAACC,EAAA,EAAD,CAAOC,UAAWb,EAAQV,UAAWwB,UAAW,GAC9C,kBAACC,EAAA,EAAD,CAAMzB,WAAS,EAAC0B,UAAU,SAASC,QAAQ,SAAStB,QAAS,GAC3D,kBAACoB,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CACEC,GAAG,mBACHC,MAAM,0BACNxC,MAAOqB,EACP5B,SAAU,SAACgD,GACTnB,EAAoBmB,EAAM3C,OAAOE,QAEnC0C,QAAQ,WACRC,WAAY,CACVC,eAAgBtD,GAElBuD,WAAS,KAGb,kBAACX,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACS,EAAA,EAAD,CAAYP,GAAG,kBAAkBQ,cAAY,GAA7C,eACWxB,EADX,eAGA,kBAACyB,EAAA,EAAD,CACEhD,MAAOuB,EACP9B,SAAU,SAACgD,EAAOzC,GAAR,OAAkBwB,EAAOxB,IACnCiD,iBAAkB,SAACjD,GAAD,gBAAcA,EAAd,eAClBkD,kBAAgB,kBAChBC,KAAM,EACNC,IAAK,GACLC,IAAK,GACLC,kBAAkB,UAGtB,kBAACpB,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACS,EAAA,EAAD,CAAYP,GAAG,6BAA6BQ,cAAY,GAAxD,kCAC8BtB,EAD9B,eAGA,kBAACuB,EAAA,EAAD,CACEhD,MAAOyB,EACPhC,SAAU,SAACgD,EAAOzC,GAAR,OAAkB0B,EAAiB1B,IAC7CiD,iBAAkB,SAACjD,GAAD,gBAAcA,EAAd,eAClBkD,kBAAgB,6BAChBC,KAAM,EACNC,IAAK,GACLC,IAAK,GACLC,kBAAkB,UAGtB,kBAACpB,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CACEC,GAAG,eACHC,MAAM,kBACNxC,MAAO2B,EACPlC,SAAU,SAACgD,GACTb,EAAUa,EAAM3C,OAAOE,QAEzB0C,QAAQ,WACRC,WAAY,CACVC,eAAgBtD,GAElBuD,WAAS,KAGb,kBAACX,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CACEC,GAAG,qBACHC,MAAM,qBACNxC,MAAO6B,EACPpC,SAAU,SAACgD,GACTX,EAAqBW,EAAM3C,OAAOE,QAEpC0C,QAAQ,WACRC,WAAY,CACVC,eAAgBvC,GAElBwC,WAAS,MAIf,kBAACU,EAAA,EAAD,CAAQvB,UAAWb,EAAQJ,OAAQ2B,QAAQ,YAAYc,MAAM,UAAUC,QAvFzD,WAChBC,QAAQC,IAAI,oBAAqBtC,GACjCqC,QAAQC,IAAI,MAAOpC,GACnBmC,QAAQC,IAAI,iBAAkBlC,GAC9BiC,QAAQC,IAAI,SAAUhC,GACtB+B,QAAQC,IAAI,qBAAsB9B,KAkFhC,eC9GAtB,EAAYC,aAAW,SAACrB,GAAD,MAAY,CACvCyE,KAAM,CACJ3C,UAAW,SACX4C,MAAO,OACPnD,QAAS,OACToD,eAAgB,SAChBlD,WAAY,SACZI,UAAW7B,EAAM2B,QAAQ,GACzB,QAAS,CACPiD,SAAU,IACVF,MAAO,IACPG,UAAW,UAiBFC,MAZf,WACE,IAAM9C,EAAUZ,IAChB,OACE,kBAAC2D,EAAA,EAAD,CAAe/E,MAAOgF,GACpB,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAWN,SAAS,KAAK/B,UAAWb,EAAQyC,MAC1C,kBAAC,EAAD,SClBYU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7B,QAAQ6B,MAAMA,EAAMC,c","file":"static/js/main.3d7c4ce1.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n  },\n});\n\nexport default theme","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\nexport const DollarInput = (props) => {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      allowNegative={false}\n      prefix=\"$\"\n    />\n  );\n};\n\nexport const PercentageInput = (props) => {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      allowNegative={false}\n      suffix=\"%\"\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DollarInput, PercentageInput } from './InputHelpers';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(5),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    alignSelf: 'flex-end',\n  },\n}));\n\nconst Calculator = () => {\n  const classes = useStyles();\n  const [withdrawalAmount, setWithdrawalAmount] = useState('10000');\n  const [age, setAge] = useState(25);\n  const [retirementAge, setRetirementAge] = useState(65);\n  const [salary, setSalary] = useState('40000');\n  const [superContribution, setSuperContribution] = useState('9.5');\n\n  const calculate = () => {\n    console.log('Withdrawal amount', withdrawalAmount);\n    console.log('Age', age);\n    console.log('Retirement age', retirementAge);\n    console.log('Salary', salary);\n    console.log('Super contribution', superContribution);\n  };\n\n  return (\n    <Paper className={classes.container} elevation={3}>\n      <Grid container direction=\"column\" justify=\"center\" spacing={3}>\n        <Grid item>\n          <TextField\n            id=\"input-withdrawal\"\n            label=\"Super withdrawal amount\"\n            value={withdrawalAmount}\n            onChange={(event) => {\n              setWithdrawalAmount(event.target.value);\n            }}\n            variant=\"outlined\"\n            InputProps={{\n              inputComponent: DollarInput,\n            }}\n            fullWidth\n          />\n        </Grid>\n        <Grid item>\n          <Typography id=\"input-age-title\" gutterBottom>\n            {`Age: ${age} years old`}\n          </Typography>\n          <Slider\n            value={age}\n            onChange={(event, value) => setAge(value)}\n            getAriaValueText={(value) => `${value} years old`}\n            aria-labelledby=\"input-age-title\"\n            step={1}\n            min={15}\n            max={99}\n            valueLabelDisplay=\"auto\"\n          />\n        </Grid>\n        <Grid item>\n          <Typography id=\"input-retirement-age-title\" gutterBottom>\n            {`Desired retirement age: ${retirementAge} years old`}\n          </Typography>\n          <Slider\n            value={retirementAge}\n            onChange={(event, value) => setRetirementAge(value)}\n            getAriaValueText={(value) => `${value} years old`}\n            aria-labelledby=\"input-retirement-age-title\"\n            step={1}\n            min={25}\n            max={99}\n            valueLabelDisplay=\"auto\"\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"input-salary\"\n            label=\"Salary (annual)\"\n            value={salary}\n            onChange={(event) => {\n              setSalary(event.target.value);\n            }}\n            variant=\"outlined\"\n            InputProps={{\n              inputComponent: DollarInput,\n            }}\n            fullWidth\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"input-contribution\"\n            label=\"Super contribution\"\n            value={superContribution}\n            onChange={(event) => {\n              setSuperContribution(event.target.value);\n            }}\n            variant=\"outlined\"\n            InputProps={{\n              inputComponent: PercentageInput,\n            }}\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n      <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={calculate}>\n        Calculate\n      </Button>\n    </Paper>\n  );\n};\n\nexport default Calculator;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\n\nimport appTheme from './theme';\nimport Calculator from './calculator';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignSelf: 'center',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: theme.spacing(4),\n    '& > *': {\n      maxWidth: 800,\n      width: 500,\n      minHeight: 200,\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={appTheme}>\n      <CssBaseline />\n      <Container maxWidth=\"sm\" className={classes.root}>\n        <Calculator />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}