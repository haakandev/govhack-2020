{"version":3,"sources":["theme.js","calculator/InputHelpers.jsx","constants.js","utils.js","calculator/index.jsx","results/index.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["theme","createMuiTheme","palette","DollarInput","props","inputRef","onChange","other","getInputRef","onValueChange","values","target","name","value","thousandSeparator","isNumericString","allowNegative","prefix","PercentageInput","suffix","TAX_BANDS","min","max","rate","Infinity","calculatePostTaxIncome","income","earnedIncome","forEach","band","scrollToRef","ref","current","window","scrollTo","offsetTop","useStyles","makeStyles","container","display","flexDirection","alignItems","padding","spacing","button","marginTop","alignSelf","Calculator","React","forwardRef","onResult","classes","useState","withdrawalAmount","setWithdrawalAmount","age","setAge","retirementAge","setRetirementAge","salary","setSalary","superContribution","setSuperContribution","Paper","className","elevation","Grid","direction","justify","item","TextField","id","label","event","variant","InputProps","inputComponent","fullWidth","Typography","gutterBottom","Slider","getAriaValueText","aria-labelledby","step","valueLabelDisplay","Button","color","onClick","yearsLeft","lostSuper","yearsToCatchUp","cumulativeAnnualIncome","i","parseInt","Result","result","calculatorContainer","Object","entries","map","key","root","width","justifyContent","maxWidth","minHeight","App","containerRef","useRef","calculatorRef","resultsRef","setResult","useEffect","ThemeProvider","appTheme","CssBaseline","Container","resultsContainer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c12473ba.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n  },\n});\n\nexport default theme","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\nexport const DollarInput = (props) => {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      allowNegative={false}\n      prefix=\"$\"\n    />\n  );\n};\n\nexport const PercentageInput = (props) => {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      allowNegative={false}\n      suffix=\"%\"\n    />\n  );\n};\n","export const YEARLY_RETURNS = 0.104;\nexport const TAX_BANDS = [{\n  min: 0,\n  max: 18200,\n  rate: 0,\n}, {\n  min: 18201,\n  max: 37000,\n  rate: 0.19,\n}, {\n  min: 37001,\n  max: 87000,\n  rate: 0.325,\n}, {\n  min: 87001,\n  max: 180000,\n  rate: 0.37,\n}, {\n  min: 180001,\n  max: Infinity,\n  rate: 0.45,\n}];\n","import { TAX_BANDS } from './constants';\n\nexport const calculatePostTaxIncome = (income) => {\n  let earnedIncome;\n  TAX_BANDS.forEach((band) => {\n    if (band.min <= income && income <= band.max) {\n      earnedIncome += (income - band.min) * (1 - band.rate);\n    } else if (band.min <= income && income > band.max) {\n      earnedIncome += (band.max - band.min) * (1 - band.rate);\n    }\n    return earnedIncome;\n  });\n};\n\nexport const scrollToRef = (ref) => {\n  if (ref.current) {\n    window.scrollTo(0, ref.current.offsetTop);\n  }\n};\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DollarInput, PercentageInput } from './InputHelpers';\nimport { YEARLY_RETURNS } from '../constants';\nimport { calculatePostTaxIncome } from '../utils';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(5),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    alignSelf: 'flex-end',\n  },\n}));\n\nconst Calculator = React.forwardRef(({ onResult }, ref) => {\n  const classes = useStyles();\n  const [withdrawalAmount, setWithdrawalAmount] = useState('10000');\n  const [age, setAge] = useState(25);\n  const [retirementAge, setRetirementAge] = useState(65);\n  const [salary, setSalary] = useState('40000');\n  const [superContribution, setSuperContribution] = useState('9.5');\n\n  const calculate = () => {\n    const yearsLeft = retirementAge - age;\n    const lostSuper = withdrawalAmount * (1 + YEARLY_RETURNS) ** yearsLeft;\n    let yearsToCatchUp = 0;\n    let cumulativeAnnualIncome = 0;\n    for (let i = 0; cumulativeAnnualIncome < lostSuper; i++) {\n      yearsToCatchUp += 1;\n      cumulativeAnnualIncome += calculatePostTaxIncome(parseInt(salary, 10));\n    }\n    onResult({ yearsToCatchUp, superContribution, lostSuper });\n  };\n\n  return (\n    <Paper className={classes.container} elevation={3} ref={ref}>\n      <Grid container direction=\"column\" justify=\"center\" spacing={3}>\n        <Grid item>\n          <TextField\n            id=\"input-withdrawal\"\n            label=\"Super withdrawal amount\"\n            value={withdrawalAmount}\n            onChange={(event) => {\n              setWithdrawalAmount(event.target.value);\n            }}\n            variant=\"outlined\"\n            InputProps={{\n              inputComponent: DollarInput,\n            }}\n            fullWidth\n          />\n        </Grid>\n        <Grid item>\n          <Typography id=\"input-age-title\" gutterBottom>\n            {`Age: ${age} years old`}\n          </Typography>\n          <Slider\n            value={age}\n            onChange={(event, value) => setAge(value)}\n            getAriaValueText={(value) => `${value} years old`}\n            aria-labelledby=\"input-age-title\"\n            step={1}\n            min={15}\n            max={99}\n            valueLabelDisplay=\"auto\"\n          />\n        </Grid>\n        <Grid item>\n          <Typography id=\"input-retirement-age-title\" gutterBottom>\n            {`Desired retirement age: ${retirementAge} years old`}\n          </Typography>\n          <Slider\n            value={retirementAge}\n            onChange={(event, value) => setRetirementAge(value)}\n            getAriaValueText={(value) => `${value} years old`}\n            aria-labelledby=\"input-retirement-age-title\"\n            step={1}\n            min={25}\n            max={99}\n            valueLabelDisplay=\"auto\"\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"input-salary\"\n            label=\"Salary (annual)\"\n            value={salary}\n            onChange={(event) => {\n              setSalary(event.target.value);\n            }}\n            variant=\"outlined\"\n            InputProps={{\n              inputComponent: DollarInput,\n            }}\n            fullWidth\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"input-contribution\"\n            label=\"Super contribution\"\n            value={superContribution}\n            onChange={(event) => {\n              setSuperContribution(event.target.value);\n            }}\n            variant=\"outlined\"\n            InputProps={{\n              inputComponent: PercentageInput,\n            }}\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n      <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={calculate}>\n        Calculate\n      </Button>\n    </Paper>\n  );\n});\n\nexport default Calculator;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { scrollToRef } from '../utils';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(5),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    alignSelf: 'flex-end',\n  },\n}));\n\nconst Result = React.forwardRef(({ result, calculatorContainer }, ref) => {\n  const classes = useStyles();\n\n  const tryAgain = () => {\n    scrollToRef(calculatorContainer);\n  };\n\n  return (\n    <Paper className={classes.container} elevation={3} ref={ref}>\n      <Grid container direction=\"column\" justify=\"center\" spacing={3}>\n        <Grid item>\n          <Typography variant=\"h1\">\n            Results\n          </Typography>\n        </Grid>\n        <Grid item>\n          {Object.entries(result).map(([key, value]) => <Typography key={key} variant=\"body1\">{`${key}: ${value}`}</Typography>)}\n        </Grid>\n      </Grid>\n      <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={tryAgain}>\n        Try again\n      </Button>\n    </Paper>\n  );\n});\n\nexport default Result;\n","import React, { useEffect, useState, useRef } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport appTheme from './theme';\nimport Calculator from './calculator';\nimport Results from './results';\nimport { scrollToRef } from './utils';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignSelf: 'center',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: theme.spacing(4),\n    '& > *': {\n      maxWidth: 800,\n      width: 500,\n      minHeight: 200,\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const containerRef = useRef();\n  const calculatorRef = useRef();\n  const resultsRef = useRef();\n  const [result, setResult] = useState();\n\n  useEffect(() => {\n    scrollToRef(resultsRef);\n  }, [result]);\n\n  return (\n    <ThemeProvider theme={appTheme}>\n      <CssBaseline />\n      <Container maxWidth=\"sm\" className={classes.root} ref={containerRef}>\n        <Grid container direction=\"column\" justify=\"center\" spacing={3}>\n          <Grid item>\n            <Calculator onResult={setResult} ref={calculatorRef} resultsContainer={resultsRef} />\n          </Grid>\n          {result\n          && (\n          <Grid item>\n            <Results result={result} ref={resultsRef} calculatorContainer={calculatorRef} />\n          </Grid>\n          )}\n        </Grid>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}