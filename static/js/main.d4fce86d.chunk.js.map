{"version":3,"sources":["theme.js","components/InputHelpers.jsx","constants.js","utils.js","components/InfoTooltip.jsx","components/Calculator.jsx","components/Results.jsx","components/Sources.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["theme","createMuiTheme","palette","DollarInput","props","inputRef","onChange","other","getInputRef","onValueChange","values","target","name","value","thousandSeparator","isNumericString","allowNegative","prefix","PercentageInput","suffix","TAX_BANDS","min","max","rate","Infinity","YEARLY_RETURNS_TOOLTIP","title","text","sources","CONTRIBUTIONS_TOOLTIP","SALARY_TOOLTIP","calculatePostTaxIncome","income","earnedIncome","forEach","band","scrollToRef","ref","current","scrollIntoView","behavior","formatMoney","amount","negativeSign","i","parseInt","Math","abs","Number","toFixed","toString","j","length","substr","replace","useStyles","makeStyles","modal","display","flexDirection","position","width","backgroundColor","background","paper","border","boxShadow","shadows","padding","spacing","top","left","transform","marginTop","link","button","alignSelf","InfoTooltip","open","handleClose","tooltip","classes","Modal","onClose","aria-labelledby","aria-describedby","className","Typography","variant","id","map","sourceId","Link","href","onClick","key","Button","color","container","alignItems","Calculator","React","forwardRef","onResult","useState","setTooltip","withdrawalAmount","setWithdrawalAmount","age","setAge","retirementAge","setRetirementAge","salary","setSalary","superContribution","setSuperContribution","yearlyReturns","setYearlyReturns","Paper","elevation","Grid","direction","justify","item","TextField","label","event","InputProps","inputComponent","fullWidth","gutterBottom","Slider","getAriaValueText","step","valueLabelDisplay","endAdornment","InputAdornment","IconButton","aria-label","yearsLeft","lostSuper","yearsToCatchUp","cumulativeAnnualIncome","annualContribution","graphData","Array","from","reduce","total","_","index","year","base","extra","graphKeys","yearsToRetirement","graphContainer","height","listItem","Result","result","calculatorContainer","data","setData","useEffect","setTimeout","baseColor","withExtraColor","keys","indexBy","margin","right","bottom","colors","scheme","borderColor","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","format","enableLabel","style","animate","motionStiffness","motionDamping","fontSize","postTaxIncome","Sources","rel","root","justifyContent","maxWidth","minHeight","App","containerRef","useRef","calculatorRef","resultsRef","setResult","ThemeProvider","appTheme","CssBaseline","Container","resultsContainer","Results","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d4fce86d.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n  },\n});\n\nexport default theme","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\nexport const DollarInput = (props) => {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      allowNegative={false}\n      prefix=\"$\"\n    />\n  );\n};\n\nexport const PercentageInput = (props) => {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      allowNegative={false}\n      suffix=\"%\"\n    />\n  );\n};\n","export const TAX_BANDS = [{\n  min: 0,\n  max: 18200,\n  rate: 0,\n}, {\n  min: 18201,\n  max: 37000,\n  rate: 0.19,\n}, {\n  min: 37001,\n  max: 87000,\n  rate: 0.325,\n}, {\n  min: 87001,\n  max: 180000,\n  rate: 0.37,\n}, {\n  min: 180001,\n  max: Infinity,\n  rate: 0.45,\n}];\n\nexport const YEARLY_RETURNS_TOOLTIP = {\n  title: 'Expected yearly returns',\n  text: 'Over the last 40 years, super has returned an average of 10.4% per year, or 6.2% adjusted for CPI',\n  sources: ['2'],\n};\nexport const CONTRIBUTIONS_TOOLTIP = {\n  title: 'Super contribtuions',\n  text: 'Currently your employer is required to contribute at least 9.5% of your salary to your super. If you are able to make larger contributions you can greatly increase your super!\\n\\nNote that if you contribute more than $25,000/year you will not get the same tax benefits on the full amount.',\n};\nexport const SALARY_TOOLTIP = {\n  title: 'Typical salary',\n  text: 'The average salary in Australia 2017 was $59,328. The median was $49,397.',\n  sources: ['1'],\n};\nexport const YEARS_OF_WORK_TOOLTIP = (income, postTaxIncome) => ({\n  title: 'How did we calculate this',\n  text: `With an income of ${income}, you would have ${postTaxIncome} left after tax. With that we calculated how many years it would take to earn the amount lost by withdrawing super early.`,\n  sources: ['3'],\n});\n","import { TAX_BANDS } from './constants';\n\nexport const calculatePostTaxIncome = (income) => {\n  let earnedIncome = 0;\n  TAX_BANDS.forEach((band) => {\n    if (band.min <= income && income <= band.max) {\n      earnedIncome += (income - band.min) * (1 - band.rate);\n    } else if (band.min <= income && income > band.max) {\n      earnedIncome += (band.max - band.min) * (1 - band.rate);\n    }\n  });\n  return earnedIncome;\n};\n\nexport const scrollToRef = (ref) => {\n  if (ref.current) {\n    ref.current.scrollIntoView({ behavior: 'smooth' });\n  }\n};\n\nexport const formatMoney = (amount) => {\n  const decimalCount = 0;\n  const decimal = '.';\n  const thousands = ',';\n  const negativeSign = amount < 0 ? '-' : '';\n\n  const i = parseInt(Math.abs(Number(amount) || 0).toFixed(decimalCount), 10).toString();\n  const j = (i.length > 3) ? i.length % 3 : 0;\n\n  return `$${negativeSign}${(j ? i.substr(0, j) + thousands : '')}${i.substr(j).replace(/(\\d{3})(?=\\d)/g, `$1${thousands}`)}${(decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : '')}`;\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Modal from '@material-ui/core/Modal';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  sources: {\n    marginTop: theme.spacing(2),\n  },\n  link: {\n    padding: theme.spacing(1),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    alignSelf: 'flex-end',\n  },\n}));\n\nconst InfoTooltip = ({\n  open, handleClose, tooltip,\n}) => {\n  const classes = useStyles();\n\n  const { text, title, sources } = tooltip || {};\n\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-title\"\n      aria-describedby=\"modal-description\"\n    >\n      <div className={classes.modal}>\n        <Typography variant=\"h5\" id=\"modal-title\">{title}</Typography>\n        <Typography variant=\"body1\" id=\"modal-description\">{text}</Typography>\n        {sources && (\n          <Typography className={classes.sources} variant=\"body2\" id=\"modal-sources\">\n            Sources:\n            {sources.map((sourceId) => (\n              <Link href={`#sources-${sourceId}`} className={classes.link} onClick={handleClose} key={sourceId}>\n                {sourceId}\n              </Link>\n            ))}\n          </Typography>\n        )}\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleClose}>\n          Close\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default InfoTooltip;\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Info from '@material-ui/icons/InfoOutlined';\nimport { DollarInput, PercentageInput } from './InputHelpers';\nimport {\n  CONTRIBUTIONS_TOOLTIP,\n  SALARY_TOOLTIP,\n  YEARLY_RETURNS_TOOLTIP,\n} from '../constants';\nimport { calculatePostTaxIncome } from '../utils';\nimport InfoTooltip from './InfoTooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(5),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    alignSelf: 'flex-end',\n  },\n}));\n\nconst Calculator = React.forwardRef(({ onResult }, ref) => {\n  const classes = useStyles();\n  const [tooltip, setTooltip] = useState();\n  const [withdrawalAmount, setWithdrawalAmount] = useState('10000');\n  const [age, setAge] = useState(25);\n  const [retirementAge, setRetirementAge] = useState(65);\n  const [salary, setSalary] = useState('40000');\n  const [superContribution, setSuperContribution] = useState('9.5');\n  const [yearlyReturns, setYearlyReturns] = useState('10.4');\n\n  const calculate = () => {\n    const yearsLeft = retirementAge - age;\n    const lostSuper = withdrawalAmount * (1 + yearlyReturns / 100) ** yearsLeft;\n    let yearsToCatchUp = 0;\n    let cumulativeAnnualIncome = 0;\n    while (cumulativeAnnualIncome < lostSuper) {\n      yearsToCatchUp += 1;\n      cumulativeAnnualIncome += calculatePostTaxIncome(parseInt(salary, 10));\n    }\n\n    const annualContribution = salary * (superContribution / 100);\n    const graphData = Array.from({ length: retirementAge - age })\n      .reduce((total, _, index) => [\n        ...total,\n        {\n          year: `${index + 1}`,\n          base: total[index].base * (1 + yearlyReturns / 100) + annualContribution,\n          extra: total[index].extra * (1 + yearlyReturns / 100),\n        },\n      ], [{ year: '0', base: 0, extra: withdrawalAmount }]);\n    const graphKeys = ['base', 'extra'];\n\n    onResult({\n      salary,\n      yearsToCatchUp,\n      superContribution,\n      lostSuper,\n      graphData,\n      graphKeys,\n      yearsToRetirement: yearsLeft,\n    });\n  };\n\n  return (\n    <Paper className={classes.container} elevation={3} ref={ref}>\n      <InfoTooltip\n        open={!!tooltip}\n        handleClose={() => setTooltip(null)}\n        tooltip={tooltip}\n      />\n      <Grid container direction=\"column\" justify=\"center\" spacing={3}>\n        <Grid item>\n          <TextField\n            id=\"input-withdrawal\"\n            label=\"Super withdrawal amount\"\n            value={withdrawalAmount}\n            onChange={(event) => {\n              setWithdrawalAmount(event.target.value);\n            }}\n            variant=\"outlined\"\n            InputProps={{\n              inputComponent: DollarInput,\n            }}\n            fullWidth\n          />\n        </Grid>\n        <Grid item>\n          <Typography id=\"input-age-title\" gutterBottom>\n            {`Age: ${age} years old`}\n          </Typography>\n          <Slider\n            value={age}\n            onChange={(event, value) => setAge(value)}\n            getAriaValueText={(value) => `${value} years old`}\n            aria-labelledby=\"input-age-title\"\n            step={1}\n            min={15}\n            max={99}\n            valueLabelDisplay=\"auto\"\n          />\n        </Grid>\n        <Grid item>\n          <Typography id=\"input-retirement-age-title\" gutterBottom>\n            {`Desired retirement age: ${retirementAge} years old`}\n          </Typography>\n          <Slider\n            value={retirementAge}\n            onChange={(event, value) => setRetirementAge(value)}\n            getAriaValueText={(value) => `${value} years old`}\n            aria-labelledby=\"input-retirement-age-title\"\n            step={1}\n            min={25}\n            max={99}\n            valueLabelDisplay=\"auto\"\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"input-salary\"\n            label=\"Salary (annual)\"\n            value={salary}\n            onChange={(event) => {\n              setSalary(event.target.value);\n            }}\n            variant=\"outlined\"\n            InputProps={{\n              inputComponent: DollarInput,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"show more information\"\n                    onClick={() => setTooltip(SALARY_TOOLTIP)}\n                  >\n                    <Info />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            fullWidth\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"input-contribution\"\n            label=\"Super contribution\"\n            value={superContribution}\n            onChange={(event) => {\n              setSuperContribution(event.target.value);\n            }}\n            variant=\"outlined\"\n            InputProps={{\n              inputComponent: PercentageInput,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"show more information\"\n                    onClick={() => setTooltip(CONTRIBUTIONS_TOOLTIP)}\n                  >\n                    <Info />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            fullWidth\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"input-expected-yearly\"\n            label=\"Expected yearly returns\"\n            value={yearlyReturns}\n            onChange={(event) => {\n              setYearlyReturns(event.target.value);\n            }}\n            variant=\"outlined\"\n            InputProps={{\n              inputComponent: PercentageInput,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"show more information\"\n                    onClick={() => setTooltip(YEARLY_RETURNS_TOOLTIP)}\n                  >\n                    <Info />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n      <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={calculate}>\n        Calculate\n      </Button>\n    </Paper>\n  );\n});\n\nexport default Calculator;\n","import React, { useEffect, useState } from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Arrow from '@material-ui/icons/PlayArrowOutlined';\nimport Help from '@material-ui/icons/HelpOutlineOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { calculatePostTaxIncome, formatMoney, scrollToRef } from '../utils';\nimport InfoTooltip from './InfoTooltip';\nimport { YEARS_OF_WORK_TOOLTIP } from '../constants';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(5),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    alignSelf: 'flex-end',\n  },\n  graphContainer: {\n    height: 300,\n  },\n  listItem: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nconst Result = React.forwardRef(({ result, calculatorContainer }, ref) => {\n  const classes = useStyles();\n  const [tooltip, setTooltip] = useState();\n  const [data, setData] = useState(result.graphData.map(\n    (item) => ({ ...item, base: 0, extra: 0 }),\n  ));\n\n  useEffect(() => {\n    setTimeout(() => {\n      setData(result.graphData.map((item) => ({\n        ...item, base: parseInt(item.base, 10), extra: parseInt(item.extra, 10), baseColor: 'blue', withExtraColor: 'red',\n      })));\n    }, 500);\n  }, [result.graphData]);\n\n  const tryAgain = () => {\n    scrollToRef(calculatorContainer);\n  };\n\n  return (\n    <>\n      <InfoTooltip\n        open={!!tooltip}\n        handleClose={() => setTooltip(null)}\n        tooltip={tooltip}\n      />\n      <Grid container direction=\"column\" justify=\"center\" spacing={2}>\n        <Grid item>\n          <Paper className={classes.container} elevation={3} ref={ref}>\n            <Grid container direction=\"column\" justify=\"center\" spacing={3}>\n              <Grid item>\n                <Typography variant=\"h3\">\n                  Results\n                </Typography>\n              </Grid>\n              <Grid className={classes.graphContainer} item>\n                <ResponsiveBar\n                  data={data}\n                  keys={result.graphKeys}\n                  indexBy=\"year\"\n                  margin={{\n                    top: 0, right: 0, bottom: 50, left: 80,\n                  }}\n                  padding={0.3}\n                  colors={{ scheme: 'pastel1' }}\n                  borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n                  axisTop={null}\n                  axisRight={null}\n                  axisBottom={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'Year',\n                    legendPosition: 'middle',\n                    legendOffset: 32,\n                  }}\n                  axisLeft={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'Super balance (thousand dollars)',\n                    legendPosition: 'middle',\n                    legendOffset: -65,\n                    format: (value) => formatMoney(value / 1000),\n                  }}\n                  enableLabel={false}\n                  tooltip={({\n                    index,\n                  }) => (\n                    <>\n                      <strong style={{ color: '#779ecb' }}>\n                        If not withdrawn:\n                        {' '}\n                        {formatMoney(data[index].base + data[index].extra)}\n                        <br />\n                        Regular contributions:\n                        {' '}\n                        {formatMoney(data[index].base)}\n                      </strong>\n                    </>\n                  )}\n                  animate\n                  motionStiffness={120}\n                  motionDamping={40}\n                />\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h4\">\n                  Summary\n                </Typography>\n                <Typography variant=\"body1\">\n                  {`When you retire after ${result.yearsToRetirement}, you will be ${formatMoney(result.lostSuper)} worse off. `}\n                  <strong>Is it worth it?</strong>\n                </Typography>\n                <Typography variant=\"h6\">\n                  {`${formatMoney(result.lostSuper)} is equivalent to...`}\n                </Typography>\n                <Typography variant=\"body1\" className={classes.listItem}>\n                  <Arrow />\n                  {`Another ${result.yearsToCatchUp} years of work `}\n                  <IconButton aria-label=\"more information\" fontSize=\"small\" onClick={() => setTooltip(YEARS_OF_WORK_TOOLTIP(formatMoney(result.salary), formatMoney(calculatePostTaxIncome(result.salary))))}>\n                    <Help />\n                  </IconButton>\n                </Typography>\n              </Grid>\n            </Grid>\n            <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={tryAgain}>\n              Try again\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n});\n\nexport default Result;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(5),\n  },\n}));\n\nconst Sources = () => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.container} elevation={3}>\n      <Grid container direction=\"column\" justify=\"center\" spacing={3}>\n        <Grid item>\n          <Typography variant=\"h5\">\n            Sources\n          </Typography>\n          <Typography variant=\"body2\" id=\"sources-1\">\n            1. ATO Taxation Statistics, 2016-2017.\n            <Link\n              href=\"https://data.gov.au/data/dataset/taxation-statistics-2016-17/resource/61b5ba05-c38c-4551-b669-864d9d29a120?view_id=972b872d-348a-4a77-8a99-b1514e9e48d3\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <OpenInNew fontSize=\"small\" />\n            </Link>\n          </Typography>\n          <Typography variant=\"body2\" id=\"sources-1\">\n            2. ASFA Superannuation Statistics, June 2020.\n            <Link\n              href=\"https://www.superannuation.asn.au/ArticleDocuments/269/SuperStats-Jun2020.pdf.aspx?Embed=Y\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <OpenInNew fontSize=\"small\" />\n            </Link>\n          </Typography>\n          <Typography variant=\"body2\" id=\"sources-2\">\n            3. ATO Taxation Statistics, 2017-2018.\n            <Link\n              href=\"https://data.gov.au/data/dataset/taxation-statistics-2017-18/resource/ce1c3e45-4ccb-499c-b9ee-7b06becaae48\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <OpenInNew fontSize=\"small\" />\n            </Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Sources;\n","import React, { useEffect, useState, useRef } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport appTheme from './theme';\nimport Calculator from './components/Calculator';\nimport Results from './components/Results';\nimport Sources from './components/Sources';\nimport { scrollToRef } from './utils';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignSelf: 'center',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: theme.spacing(4),\n    '& > *': {\n      maxWidth: 800,\n      width: '100%',\n      minHeight: 200,\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const containerRef = useRef();\n  const calculatorRef = useRef();\n  const resultsRef = useRef();\n  const [result, setResult] = useState();\n\n  useEffect(() => {\n    scrollToRef(resultsRef);\n  }, [result]);\n\n  return (\n    <ThemeProvider theme={appTheme}>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" className={classes.root} ref={containerRef}>\n        <Grid container direction=\"column\" justify=\"center\" spacing={3}>\n          <Grid item>\n            <Calculator onResult={setResult} ref={calculatorRef} resultsContainer={resultsRef} />\n          </Grid>\n          {result\n          && (\n          <Grid item>\n            <Results result={result} ref={resultsRef} calculatorContainer={calculatorRef} />\n          </Grid>\n          )}\n          <Grid item>\n            <Sources />\n          </Grid>\n        </Grid>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}